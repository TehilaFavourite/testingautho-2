{"abi":[{"type":"error","name":"ReentrancyGuardReentrantCall","inputs":[]}],"bytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"deployedBytecode":{"object":"0x","sourceMap":"","linkReferences":{}},"methodIdentifiers":{},"rawMetadata":"{\"compiler\":{\"version\":\"0.8.28+commit.7893614a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at, consider using {ReentrancyGuardTransient} instead. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@arbitrum/=node_modules/@arbitrum/\",\":@chainlink/=node_modules/@chainlink/\",\":@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/\",\":@offchainlabs/=node_modules/@offchainlabs/\",\":@openzeppelin/=node_modules/@openzeppelin/\",\":@scroll-tech/=node_modules/@scroll-tech/\",\":@zksync/=node_modules/@zksync/\",\":eth-gas-reporter/=node_modules/eth-gas-reporter/\",\":forge-std/=lib/forge-std/src/\",\":hardhat/=node_modules/hardhat/\"]},\"sources\":{\"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a\",\"dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA\"]}},\"version\":1}","metadata":{"compiler":{"version":"0.8.28+commit.7893614a"},"language":"Solidity","output":{"abi":[{"inputs":[],"type":"error","name":"ReentrancyGuardReentrantCall"}],"devdoc":{"kind":"dev","methods":{},"version":1},"userdoc":{"kind":"user","methods":{},"version":1}},"settings":{"remappings":["@arbitrum/=node_modules/@arbitrum/","@chainlink/=node_modules/@chainlink/","@eth-optimism/=node_modules/@chainlink/contracts/node_modules/@eth-optimism/","@offchainlabs/=node_modules/@offchainlabs/","@openzeppelin/=node_modules/@openzeppelin/","@scroll-tech/=node_modules/@scroll-tech/","@zksync/=node_modules/@zksync/","eth-gas-reporter/=node_modules/eth-gas-reporter/","forge-std/=lib/forge-std/src/","hardhat/=node_modules/hardhat/"],"optimizer":{"enabled":false,"runs":200},"metadata":{"bytecodeHash":"ipfs"},"compilationTarget":{"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol":"ReentrancyGuard"},"evmVersion":"cancun","libraries":{}},"sources":{"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol":{"keccak256":"0x11a5a79827df29e915a12740caf62fe21ebe27c08c9ae3e09abe9ee3ba3866d3","urls":["bzz-raw://3cf0c69ab827e3251db9ee6a50647d62c90ba580a4d7bbff21f2bea39e7b2f4a","dweb:/ipfs/QmZiKwtKU1SBX4RGfQtY7PZfiapbbu6SZ9vizGQD9UHjRA"],"license":"MIT"}},"version":1},"ast":{"absolutePath":"node_modules/@openzeppelin/contracts/utils/ReentrancyGuard.sol","id":9375,"exportedSymbols":{"ReentrancyGuard":[9374]},"nodeType":"SourceUnit","src":"109:3275:28","nodes":[{"id":9307,"nodeType":"PragmaDirective","src":"109:24:28","nodes":[],"literals":["solidity","^","0.8",".20"]},{"id":9374,"nodeType":"ContractDefinition","src":"1030:2353:28","nodes":[{"id":9311,"nodeType":"VariableDeclaration","src":"1818:40:28","nodes":[],"constant":true,"mutability":"constant","name":"NOT_ENTERED","nameLocation":"1843:11:28","scope":9374,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9309,"name":"uint256","nodeType":"ElementaryTypeName","src":"1818:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"31","id":9310,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1857:1:28","typeDescriptions":{"typeIdentifier":"t_rational_1_by_1","typeString":"int_const 1"},"value":"1"},"visibility":"private"},{"id":9314,"nodeType":"VariableDeclaration","src":"1864:36:28","nodes":[],"constant":true,"mutability":"constant","name":"ENTERED","nameLocation":"1889:7:28","scope":9374,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9312,"name":"uint256","nodeType":"ElementaryTypeName","src":"1864:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"value":{"hexValue":"32","id":9313,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1899:1:28","typeDescriptions":{"typeIdentifier":"t_rational_2_by_1","typeString":"int_const 2"},"value":"2"},"visibility":"private"},{"id":9316,"nodeType":"VariableDeclaration","src":"1907:23:28","nodes":[],"constant":false,"mutability":"mutable","name":"_status","nameLocation":"1923:7:28","scope":9374,"stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":9315,"name":"uint256","nodeType":"ElementaryTypeName","src":"1907:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"private"},{"id":9319,"nodeType":"ErrorDefinition","src":"1994:37:28","nodes":[],"documentation":{"id":9317,"nodeType":"StructuredDocumentation","src":"1937:52:28","text":" @dev Unauthorized reentrant call."},"errorSelector":"3ee5aeb5","name":"ReentrancyGuardReentrantCall","nameLocation":"2000:28:28","parameters":{"id":9318,"nodeType":"ParameterList","parameters":[],"src":"2028:2:28"}},{"id":9327,"nodeType":"FunctionDefinition","src":"2037:52:28","nodes":[],"body":{"id":9326,"nodeType":"Block","src":"2051:38:28","nodes":[],"statements":[{"expression":{"id":9324,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9322,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9316,"src":"2061:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9323,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9311,"src":"2071:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2061:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9325,"nodeType":"ExpressionStatement","src":"2061:21:28"}]},"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","parameters":{"id":9320,"nodeType":"ParameterList","parameters":[],"src":"2048:2:28"},"returnParameters":{"id":9321,"nodeType":"ParameterList","parameters":[],"src":"2051:0:28"},"scope":9374,"stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"id":9338,"nodeType":"ModifierDefinition","src":"2466:103:28","nodes":[],"body":{"id":9337,"nodeType":"Block","src":"2490:79:28","nodes":[],"statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9330,"name":"_nonReentrantBefore","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9354,"src":"2500:19:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9331,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2500:21:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9332,"nodeType":"ExpressionStatement","src":"2500:21:28"},{"id":9333,"nodeType":"PlaceholderStatement","src":"2531:1:28"},{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":9334,"name":"_nonReentrantAfter","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9362,"src":"2542:18:28","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$__$returns$__$","typeString":"function ()"}},"id":9335,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2542:20:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":9336,"nodeType":"ExpressionStatement","src":"2542:20:28"}]},"documentation":{"id":9328,"nodeType":"StructuredDocumentation","src":"2095:366:28","text":" @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."},"name":"nonReentrant","nameLocation":"2475:12:28","parameters":{"id":9329,"nodeType":"ParameterList","parameters":[],"src":"2487:2:28"},"virtual":false,"visibility":"internal"},{"id":9354,"nodeType":"FunctionDefinition","src":"2575:307:28","nodes":[],"body":{"id":9353,"nodeType":"Block","src":"2614:268:28","nodes":[],"statements":[{"condition":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9343,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9341,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9316,"src":"2702:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9342,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9314,"src":"2713:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2702:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":9348,"nodeType":"IfStatement","src":"2698:86:28","trueBody":{"id":9347,"nodeType":"Block","src":"2722:62:28","statements":[{"errorCall":{"arguments":[],"expression":{"argumentTypes":[],"id":9344,"name":"ReentrancyGuardReentrantCall","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9319,"src":"2743:28:28","typeDescriptions":{"typeIdentifier":"t_function_error_pure$__$returns$_t_error_$","typeString":"function () pure returns (error)"}},"id":9345,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2743:30:28","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_error","typeString":"error"}},"id":9346,"nodeType":"RevertStatement","src":"2736:37:28"}]}},{"expression":{"id":9351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9349,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9316,"src":"2858:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9350,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9314,"src":"2868:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"2858:17:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9352,"nodeType":"ExpressionStatement","src":"2858:17:28"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantBefore","nameLocation":"2584:19:28","parameters":{"id":9339,"nodeType":"ParameterList","parameters":[],"src":"2603:2:28"},"returnParameters":{"id":9340,"nodeType":"ParameterList","parameters":[],"src":"2614:0:28"},"scope":9374,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":9362,"nodeType":"FunctionDefinition","src":"2888:208:28","nodes":[],"body":{"id":9361,"nodeType":"Block","src":"2926:170:28","nodes":[],"statements":[{"expression":{"id":9359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":9357,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9316,"src":"3068:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":9358,"name":"NOT_ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9311,"src":"3078:11:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3068:21:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":9360,"nodeType":"ExpressionStatement","src":"3068:21:28"}]},"implemented":true,"kind":"function","modifiers":[],"name":"_nonReentrantAfter","nameLocation":"2897:18:28","parameters":{"id":9355,"nodeType":"ParameterList","parameters":[],"src":"2915:2:28"},"returnParameters":{"id":9356,"nodeType":"ParameterList","parameters":[],"src":"2926:0:28"},"scope":9374,"stateMutability":"nonpayable","virtual":false,"visibility":"private"},{"id":9373,"nodeType":"FunctionDefinition","src":"3275:106:28","nodes":[],"body":{"id":9372,"nodeType":"Block","src":"3339:42:28","nodes":[],"statements":[{"expression":{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":9370,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":9368,"name":"_status","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9316,"src":"3356:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":9369,"name":"ENTERED","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":9314,"src":"3367:7:28","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"3356:18:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":9367,"id":9371,"nodeType":"Return","src":"3349:25:28"}]},"documentation":{"id":9363,"nodeType":"StructuredDocumentation","src":"3102:168:28","text":" @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."},"implemented":true,"kind":"function","modifiers":[],"name":"_reentrancyGuardEntered","nameLocation":"3284:23:28","parameters":{"id":9364,"nodeType":"ParameterList","parameters":[],"src":"3307:2:28"},"returnParameters":{"id":9367,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9366,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":9373,"src":"3333:4:28","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":9365,"name":"bool","nodeType":"ElementaryTypeName","src":"3333:4:28","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"3332:6:28"},"scope":9374,"stateMutability":"view","virtual":false,"visibility":"internal"}],"abstract":true,"baseContracts":[],"canonicalName":"ReentrancyGuard","contractDependencies":[],"contractKind":"contract","documentation":{"id":9308,"nodeType":"StructuredDocumentation","src":"135:894:28","text":" @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If EIP-1153 (transient storage) is available on the chain you're deploying at,\n consider using {ReentrancyGuardTransient} instead.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."},"fullyImplemented":true,"linearizedBaseContracts":[9374],"name":"ReentrancyGuard","nameLocation":"1048:15:28","scope":9375,"usedErrors":[9319],"usedEvents":[]}],"license":"MIT"},"id":28}